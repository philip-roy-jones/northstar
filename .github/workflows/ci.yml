name: CI

on:
  push:
    branches: ["**"] # run on any branch
  pull_request: # and on PRs

jobs:
  scan_ruby:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Brakeman (security scan)
        run: bin/brakeman --no-pager

  lint_ruby:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: RuboCop
        # use bundle to ensure the repo's version
        run: bundle exec rubocop -f github

  lint_js:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install npm deps
        run: npm ci

      - name: ESLint
        run: npm run lint

      - name: Prettier (check)
        run: npm run format

  test:
    runs-on: ubuntu-latest
    needs: [lint_ruby, lint_js, scan_ruby]

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: northstar_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d northstar_test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: System deps (headless Chrome for system specs)
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y google-chrome-stable

      - name: Prepare DB
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/northstar_test
        run: |
          bin/rails db:test:prepare

      # If you use RSpec, run this:
      - name: RSpec
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/northstar_test
        run: |
          bundle exec rspec

      - name: Keep screenshots from failed system tests
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
